#!/bin/bash
#
# Startup script for a spring boot project
#
# chkconfig: - 84 16
# description: Spring Boot project

echo "$(date) : $@" >> /tmp/core.log
# Source function library.
#[ -f "/etc/rc.d/init.d/functions" ] && . /etc/rc.d/init.d/functions
[ -z "$JAVA_HOME" -a -x /etc/profile.d/java.sh ] && . /etc/profile.d/java.sh


#java -jar -Dspring.profiles.active=desa -Dserver.port=4454 core-rest-api-0.0.2-SNAPSHOT.jar

# the name of the project, will also be used for the jar file, log file, ...
PROJECT_NAME=core-rest-api
# the user which should run the service
SERVICE_USER=spring
# base directory for the spring boot jar
SPRINGBOOTAPP_HOME=/opt/$PROJECT_NAME
export SPRINGBOOTAPP_HOME

# the spring boot jar-file
SPRINGBOOTAPP_JAR="$SPRINGBOOTAPP_HOME/$PROJECT_NAME.jar"

# the spring boot jvm args
JVM_ARGS="-Dspring.profiles.active=desa -Dserver.port=4454"

# java executable for spring boot app, change if you have multiple jdks installed
SPRINGBOOTAPP_JAVA=/opt/java/bin/java

# spring boot log-file
LOG="$SPRINGBOOTAPP_HOME/logs/$PROJECT_NAME.log"

LOCK="/var/lock/subsys/$PROJECT_NAME"

RETVAL=0

TIMEOUT="30"

pid_of_spring_boot() {
    pgrep -f "java.*$PROJECT_NAME"
}

start() {
    status 
	if [ $? -eq 0 ] ; then
		echo -n "aplicacion corriendo"
		exit 0
	fi 
    [ -f "$LOG" ] && cnt=`wc -l "$LOG" | awk '{ print $1+1 }'` || cnt=1

    echo -n $"Starting $PROJECT_NAME: "

    cd "$SPRINGBOOTAPP_HOME"
    #su $SERVICE_USER -c "nohup $SPRINGBOOTAPP_JAVA -jar \"$SPRINGBOOTAPP_JAR\" $JVM_ARGS >/dev/null 2>&1 &"
     su $SERVICE_USER -c "nohup $SPRINGBOOTAPP_JAVA -jar \"$SPRINGBOOTAPP_JAR\" $JVM_ARGS >> $LOG 2>&1 &"
	flag=0
    while { pid_of_spring_boot > /dev/null ; } &&
        ! {  [ -f "$LOG" ] && tail --lines=+$cnt "$LOG" |grep -i "jvm"| grep -q 'Started' ; } ; do
        sleep 1
	flag=$(( $flag + 1 ))
	if [ $flag -gt $TIMEOUT ] ; then
		echo "se sale por timeout"
		exit 2
	fi
    done

    pid_of_spring_boot > /dev/null
    RETVAL=$?
    #[ $RETVAL = 0 ] && success $"$STRING" || failure $"$STRING"
    echo

    [ $RETVAL = 0 ] && touch "$LOCK"
#	RETVAL=0
}

stop() {
    echo -n "Stopping $PROJECT_NAME: "

    pid=`pid_of_spring_boot`
    [ -n "$pid" ] && kill $pid
    RETVAL=$?
    cnt=10
    while [ $RETVAL = 0 -a $cnt -gt 0 ] &&
        { pid_of_spring_boot > /dev/null ; } ; do
            sleep 1
            ((cnt--))
    done

    [ $RETVAL = 0 ] && rm -f "$LOCK"
    #[ $RETVAL = 0 ] && success $"$STRING" || failure $"$STRING"
    echo
    RETVAL=0
}

status() {
    pid=`pid_of_spring_boot`
    if [ -n "$pid" ]; then
        echo "$PROJECT_NAME (pid $pid) is running..."
	RETVAL=0
        return 0
    fi
    if [ -f "$LOCK" ]; then
        echo $"${base} dead but subsys locked"
	RETVAL=2
        return 2
    fi
    echo "$PROJECT_NAME is stopped"
    RETVAL=3
    return 3
}

# See how we were called.
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        stop
        start
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart|status}"
        exit 1
esac

exit $RETVAL
